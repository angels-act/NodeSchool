
 # Node.jsを学んで豊かな人生を！

 ## ASYNCジャグリング (13問中9問目)

  今回の問題は前回のもの（HTTP Collect) とよく似た問題です。http.get()
  を使って GET リクエスト の結果をコンソールに出力するアプリです。

  前回のコマンドライン引数は、1つの URL でしたが今回は3つの URL
  にしてください。

  3つの GET リクエストのデータを集め、全てコンソールに書き出してください。

  今回の出力には文字カウントは不要です。文字列だけで良いです。

  コマンドライン引数 (URL)
  1つにつき1つの文字列を出力してください。出力する文字列は、コマンドライン引
  数の順番と一致させることを厳守してください。

 ─────────────────────────────────────────────────────────────────────────────

 ## ヒント

  対象の3つの HTTP サーバは思った通り動かないかもしれません。
  さらにどの順番でデータが提供されるのか決まっていないため、そのまま出力する
  と順番がぐちゃぐちゃになります。

  レスポンスの順番はリクエストの順番と異なる為、なんらかの変数に各リクエスト
  の状態を保存する必要があると思います。
  全てを受け取ってからコンソールに出力してください。

  コールバックを数えるのは Node.js の async
  マネジメントにおいて重要なことです。
  サードパーティのライブラリとして[async](https://npmjs.com/async) や
  [after](https://npmjs.com/after)
  などがありますが、今回は使わず頑張ってください。

 ─────────────────────────────────────────────────────────────────────────────

   » この説明をもう一度表示する: learnyounode print
   » 作成したアプリをテスト環境で実行する: learnyounode run program.js
   » 作成したアプリが正しいか検証する: learnyounode verify program.js
   » 出力結果が見づらい場合には --no-color をつけてみてください:
     learnyounode verify program.js --no-color
   » ヘルプを表示する: learnyounode help

