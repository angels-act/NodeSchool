
 # Node.jsを学んで豊かな人生を！

 ## HTTP ファイルサーバ (13問中11問目)

  常に同じテキストファイルを返す、HTTP のサーバを書いてください。

  1つ目のコマンドライン引数で供給されているポートでサーバを 起動 します。

  2つ目の引数は、返すテキストファイルのパスです。ファイルを返すためは
  fs.createReadStream() を使う必要があります。

 ─────────────────────────────────────────────────────────────────────────────

 ## ヒント

  今回は HTTP 専用のサーバになるので一般的な TCP サーバよりも Node.js の
  http コアモジュールを使った方が良いでしょう。 net モジュールと同じく
  http.createServer() 関数があります。 ただし、そのサーバが受信するのは HTTP
  リクエストです。

  http.createServer()
  の第1引数であるリスナー関数は、コネクションの度にに毎回呼ばれます。

  一般的なHTTPリクエストリスナー関数の例：

     function listener (request, response) { /* ... */ }

  上記の例の2つの引数は HTTP のリスナーにおける代表的なものです。 第1引数の
  request には HTTP のプロパティが入ります。例：ヘッダーやクエリ文字列。
  第2引数の response
  は、クライアントにヘッダーやボディを返すためのオブジェクトです。
  また、request や response は Node.js における Stream です！Stream
  なので、他の Stream 由来のシステムと送受信するのにぴったりです。

  http.createServer()
  はサーバのオブジェクトを返します。指定したポートで起動するためには、サーバ
  オブジェクトの server.listen(portNumber) を呼んでください。

  一般的な Node の HTTP サーバは次のように記述されています：

     var http = require('http')
     var server = http.createServer(function (req, res) {
       // request handling logic...
     })
     server.listen(8000)

  http モジュールのドキュメントは、このリンクをブラウザで見てください:

  file:///Users/kmaru/.nvm/versions/node/v7.2.0/lib/node_modules/learnyounod
  e/node_apidoc/http.html

  fs と言う Node のコアモジュールには、ファイルを stream できる API
  があります。 コマンドラインの第2引数（テキストファイルへのパス）を
  fs.createReadStream() に渡すとそのファイルを表す Stream
  オブジェクトがもらえます。 その Stream は src.pipe(dst) を使って src の
  Stream を dst の Stream に繋げることができます。

  このようにファイルのデータ Stream は HTTP のレスポンス Stream
  に繋げられます。

 ─────────────────────────────────────────────────────────────────────────────

   » この説明をもう一度表示する: learnyounode print
   » 作成したアプリをテスト環境で実行する: learnyounode run program.js
   » 作成したアプリが正しいか検証する: learnyounode verify program.js
   » 出力結果が見づらい場合には --no-color をつけてみてください:
     learnyounode verify program.js --no-color
   » ヘルプを表示する: learnyounode help

